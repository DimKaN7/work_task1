{"ast":null,"code":"var _jsxFileName = \"/Users/DimKa_N7/Documents/work/task1/todo_list/src/components/PopUp.js\";\nimport React from \"react\";\nimport DatePicker from 'react-date-picker';\nimport '../css/PopUp.css';\nconst statuses = {\n  new: 'Новый',\n  inProgress: 'В работе',\n  done: 'Завершено'\n};\nconst priorities = {\n  low: 'Низкий',\n  avg: 'Средний',\n  high: 'Высокий'\n};\n\nclass PopUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.task == null) {\n      this.state = {\n        task: {\n          id: '',\n          desc: '',\n          status: statuses['new'],\n          priority: priorities['low'],\n          endDate: '',\n          factEndDate: ''\n        },\n        editingTask: false,\n        date: new Date()\n      };\n    } else {\n      this.state = {\n        task: this.props.task,\n        editingTask: true\n      };\n    }\n\n    this.closeClick = this.closeClick.bind(this);\n    this.saveTask = this.saveTask.bind(this);\n    this.onDescriptionInputChange = this.onDescriptionInputChange.bind(this);\n    this.onSelectPriorityChange = this.onSelectPriorityChange.bind(this);\n    this.onSelectStatusChange = this.onSelectStatusChange.bind(this);\n    this.onEndDateInputChange = this.onEndDateInputChange.bind(this);\n    this.onEndDateInputClick = this.onEndDateInputClick.bind(this);\n  }\n\n  closeClick() {\n    this.props.toggle();\n  }\n\n  onDescriptionInputChange(event) {\n    let {\n      task\n    } = this.state;\n    task['desc'] = event.target.value;\n    this.setState(task);\n  }\n\n  onSelectPriorityChange(event) {\n    let {\n      task\n    } = this.state;\n    task.priority = event.target.value;\n    this.setState(task);\n  }\n\n  onSelectStatusChange(event) {\n    let {\n      task\n    } = this.state;\n    task.status = event.target.value;\n    this.setState(task);\n  }\n\n  onEndDateInputChange(event) {\n    let {\n      task\n    } = this.state;\n    task.endDate = event.target.value;\n    this.setState(task);\n  }\n\n  onEndDateInputClick(event) {}\n\n  saveTask() {\n    const {\n      task\n    } = this.state;\n    const {\n      editingTask\n    } = this.state;\n\n    if (editingTask) {\n      this.props.editTask(task);\n    } else {\n      this.props.addTask(task);\n    }\n\n    this.props.toggle();\n  }\n\n  render() {\n    let {\n      task\n    } = this.state;\n    return React.createElement(\"div\", {\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"modalContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"close\",\n      onClick: this.closeClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435/\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(\"div\", {\n      id: \"firstBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"descriptionInput\",\n      value: task.desc,\n      onChange: this.onDescriptionInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"secondBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442:\"), React.createElement(\"select\", {\n      id: \"selectPriority\",\n      value: task.priority,\n      onChange: this.onSelectPriorityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, priorities['low']), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, priorities['avg']), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, priorities['high'])), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"), React.createElement(\"select\", {\n      id: \"selectStatus\",\n      value: task.status,\n      onChange: this.onSelectStatusChange,\n      disabled: this.state.editingTask ? false : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, statuses['new']), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, statuses['inProgress']), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, statuses['done']))), React.createElement(\"div\", {\n      id: \"thirdBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\u041A\\u0440\\u0430\\u0439\\u043D\\u0438\\u0439 \\u0441\\u0440\\u043E\\u043A:\"), React.createElement(DatePicker, {\n      id: \"endDateInput\",\n      value: task.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"buttonSaveTask\",\n      onClick: this.saveTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")));\n  }\n\n}\n\nexport default PopUp;","map":{"version":3,"sources":["/Users/DimKa_N7/Documents/work/task1/todo_list/src/components/PopUp.js"],"names":["React","DatePicker","statuses","new","inProgress","done","priorities","low","avg","high","PopUp","Component","constructor","props","task","state","id","desc","status","priority","endDate","factEndDate","editingTask","date","Date","closeClick","bind","saveTask","onDescriptionInputChange","onSelectPriorityChange","onSelectStatusChange","onEndDateInputChange","onEndDateInputClick","toggle","event","target","value","setState","editTask","addTask","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DatePicker from 'react-date-picker';\nimport '../css/PopUp.css';\n\nconst statuses = {\n    new: 'Новый',\n    inProgress: 'В работе',\n    done: 'Завершено'\n};\n\nconst priorities = {\n    low: 'Низкий',\n    avg: 'Средний',\n    high: 'Высокий'\n};\n\nclass PopUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        if (this.props.task == null) {\n            this.state = { task : {\n                    id: '', \n                    desc: '', \n                    status: statuses['new'], \n                    priority: priorities['low'], \n                    endDate: '', \n                    factEndDate: ''\n                },\n                editingTask: false,\n                date: new Date()\n            };\n        }\n        else {\n            this.state = {task: this.props.task, editingTask: true};\n        }\n\n        this.closeClick = this.closeClick.bind(this);\n        this.saveTask = this.saveTask.bind(this);\n        this.onDescriptionInputChange = this.onDescriptionInputChange.bind(this);\n        this.onSelectPriorityChange = this.onSelectPriorityChange.bind(this);\n        this.onSelectStatusChange = this.onSelectStatusChange.bind(this);\n        this.onEndDateInputChange = this.onEndDateInputChange.bind(this);\n        this.onEndDateInputClick = this.onEndDateInputClick.bind(this);\n    }\n\n    closeClick() {\n        this.props.toggle();\n    }\n\n    onDescriptionInputChange(event) {\n        let {task} = this.state;\n        task['desc'] = event.target.value;\n        this.setState(task);\n    }\n\n    onSelectPriorityChange(event) {\n        let {task} = this.state;\n        task.priority = event.target.value;\n        this.setState(task);\n    }\n\n    onSelectStatusChange(event) {\n        let {task} = this.state;\n        task.status = event.target.value;\n        this.setState(task);\n    }\n\n    onEndDateInputChange(event) {\n        let {task} = this.state;\n        task.endDate = event.target.value;\n        this.setState(task);\n    }\n\n    onEndDateInputClick(event) {\n        \n    }\n\n    saveTask() {\n        const {task} = this.state; \n        const {editingTask} = this.state;\n        if (editingTask) {\n            this.props.editTask(task);\n        } else {\n            this.props.addTask(task);\n        }\n        this.props.toggle();\n    }\n\n    render() {\n        let {task} = this.state;\n        return (\n            <div id=\"modal\">\n                <div id=\"modalContent\">\n                    <span id=\"close\" onClick={this.closeClick}>&times;</span>\n                    <h1>Создание/редактирование задачи</h1>\n                    <div id='firstBlock'>\n                        <label>Описание:</label>\n                        <input type='text' id='descriptionInput' value={task.desc} onChange={this.onDescriptionInputChange}/>\n                    </div>\n                    <div id='secondBlock'>\n                        <label>Приоритет:</label>\n                        <select id='selectPriority' value={task.priority} onChange={this.onSelectPriorityChange}>\n                            <option>{priorities['low']}</option>\n                            <option>{priorities['avg']}</option>\n                            <option>{priorities['high']}</option>\n                        </select>\n                        <label>Статус:</label>\n                        <select id='selectStatus' value={task.status} onChange={this.onSelectStatusChange} disabled={this.state.editingTask ? false : true}>\n                            <option>{statuses['new']}</option>\n                            <option>{statuses['inProgress']}</option>\n                            <option>{statuses['done']}</option>\n                        </select>\n                    </div>\n                    <div id='thirdBlock'>\n                        <label>Крайний срок:</label>\n                        {/* <input type='text' id='endDateInput' value={task.endDate} onChange={this.onEndDateInputChange} onClick={this.onEndDateInputClick}/> */}\n                        <DatePicker id='endDateInput' value={task.endDate}></DatePicker>\n                    </div>\n                    <button id='buttonSaveTask' onClick={this.saveTask}>Сохранить</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopUp;"]},"metadata":{},"sourceType":"module"}