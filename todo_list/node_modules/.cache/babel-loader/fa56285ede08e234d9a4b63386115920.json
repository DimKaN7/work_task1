{"ast":null,"code":"var _jsxFileName = \"/Users/DimKa_N7/Documents/work/task1/todo_list/src/components/Menu.js\";\nimport React from 'react';\nimport '../css/Menu.css';\nimport PopUp from './PopUp';\nimport Task from './Task';\nconst statuses = {\n  new: 'Новый',\n  inProgress: 'В работе',\n  done: 'Завершено'\n};\nconst priorities = {\n  low: 'Низкий',\n  avg: 'Средний',\n  high: 'Высокий'\n};\n\nclass Menu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [{\n        id: 0,\n        desc: 'task1',\n        status: statuses['new'],\n        priority: priorities['low'],\n        endDate: '01.01.2019',\n        factEndDate: '-'\n      }, {\n        id: 1,\n        desc: 'task2',\n        status: statuses['inProgress'],\n        priority: priorities['low'],\n        endDate: '01.01.2019',\n        factEndDate: '-'\n      }, {\n        id: 2,\n        desc: 'task3',\n        status: statuses['done'],\n        priority: priorities['low'],\n        endDate: '01.01.2019',\n        factEndDate: '-'\n      }],\n      popupMenuSeen: false\n    };\n    this.togglePopupMenu = this.togglePopupMenu.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.getPopupMenu = this.getPopupMenu.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n  }\n\n  togglePopupMenu() {\n    this.setState({\n      popupMenuSeen: !this.state.popupMenuSeen\n    });\n  }\n\n  addTask(task) {\n    let {\n      tasks\n    } = this.state;\n    task['id'] = tasks.length !== 0 ? tasks.length : 0;\n    task['factEndDate'] = '-';\n    tasks.push(task);\n    console.log(tasks);\n    this.setState({\n      tasks: tasks\n    });\n  }\n\n  editTask(task) {}\n\n  deleteTask(task) {\n    let {\n      tasks\n    } = this.state;\n    const index = tasks.indexOf(task);\n    console.log(index);\n  }\n\n  getPopupMenu(task) {\n    if (task == null) {\n      return React.createElement(PopUp, {\n        toggle: this.togglePopupMenu,\n        task: null,\n        addTask: this.addTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(PopUp, {\n        toggle: this.togglePopupMenu,\n        task: task,\n        addTask: this.addTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"buttonAddTask\",\n      onClick: this.togglePopupMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"), this.state.popupMenuSeen ? this.getPopupMenu(null) : null, React.createElement(\"input\", {\n      id: \"inputSerch\",\n      type: \"text\",\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"menuLabels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\u0412\\u0441\\u0435\\u0433\\u043E - \", tasks.length), React.createElement(\"label\", {\n      className: \"menuLabels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\u041D\\u043E\\u0432\\u044B\\u0445 - \", tasks.filter(task => task.status == statuses['new']).length), React.createElement(\"label\", {\n      className: \"menuLabels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\u0412 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 - \", tasks.filter(task => task.status == statuses['inProgress']).length), React.createElement(\"label\", {\n      className: \"menuLabels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043E - \", tasks.filter(task => task.status == statuses['done']).length)), tasks.map(task => React.createElement(Task, {\n      task: task,\n      key: task.id,\n      editTask: this.togglePopupMenu,\n      deleteTask: this.deleteTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/DimKa_N7/Documents/work/task1/todo_list/src/components/Menu.js"],"names":["React","PopUp","Task","statuses","new","inProgress","done","priorities","low","avg","high","Menu","Component","constructor","state","tasks","id","desc","status","priority","endDate","factEndDate","popupMenuSeen","togglePopupMenu","bind","addTask","editTask","getPopupMenu","deleteTask","setState","task","length","push","console","log","index","indexOf","render","filter","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../css/Menu.css';\nimport PopUp from './PopUp';\nimport Task from './Task';\n\nconst statuses = {\n    new: 'Новый',\n    inProgress: 'В работе',\n    done: 'Завершено'\n};\n\nconst priorities = {\n    low: 'Низкий',\n    avg: 'Средний',\n    high: 'Высокий'\n};\n\nclass Menu extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            tasks: [\n                {id: 0, desc: 'task1', status: statuses['new'], priority: priorities['low'], endDate: '01.01.2019', factEndDate: '-'},\n                {id: 1, desc: 'task2', status: statuses['inProgress'], priority: priorities['low'], endDate: '01.01.2019', factEndDate: '-'},\n                {id: 2, desc: 'task3', status: statuses['done'], priority: priorities['low'], endDate: '01.01.2019', factEndDate: '-'}\n            ],\n            popupMenuSeen: false\n        };\n        this.togglePopupMenu = this.togglePopupMenu.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.editTask = this.editTask.bind(this);\n        this.getPopupMenu = this.getPopupMenu.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n    }\n    \n    togglePopupMenu() {\n        this.setState({popupMenuSeen: !this.state.popupMenuSeen});\n    }\n\n    addTask(task) {\n        let { tasks } = this.state;\n        task['id'] = tasks.length !== 0 ? tasks.length : 0;\n        task['factEndDate'] = '-';\n        tasks.push(task);\n        console.log(tasks);\n        this.setState({tasks: tasks});\n    }\n\n    editTask(task) {\n        \n    }\n\n    deleteTask(task) {\n        let {tasks} = this.state;\n        const index = tasks.indexOf(task);\n        console.log(index);\n    }\n\n    getPopupMenu(task) {\n        if (task == null) {\n            return <PopUp toggle={this.togglePopupMenu} task={null} addTask={this.addTask}></PopUp>;\n        }\n        else {\n            return <PopUp toggle={this.togglePopupMenu} task={task} addTask={this.addTask}></PopUp>;\n        }\n    }\n\n    render() {\n        const { tasks } = this.state;\n        return (\n            <div>\n                <div id='menu'>\n                    <button id='buttonAddTask' onClick={this.togglePopupMenu}>Добавить задачу</button>\n                    {this.state.popupMenuSeen ? this.getPopupMenu(null) : null}\n                    <input id='inputSerch' type='text' placeholder='Поиск'></input>\n                    <label className='menuLabels'>Всего - {tasks.length}</label>\n                    <label className='menuLabels'>Новых - {tasks.filter(task => task.status == statuses['new']).length}</label>\n                    <label className='menuLabels'>В работе - {tasks.filter(task => task.status == statuses['inProgress']).length}</label>\n                    <label className='menuLabels'>Завершено - {tasks.filter(task => task.status == statuses['done']).length}</label>\n                </div>\n                {tasks.map(task => \n                    <Task task={task} key={task.id} editTask={this.togglePopupMenu} deleteTask={this.deleteTask}></Task>)}\n            </div>\n        );\n\n    }\n}\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}